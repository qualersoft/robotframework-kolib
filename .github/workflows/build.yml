name: "Build"

on:
  push:
    branches:
      - main
      - develop
      - issue/**
      - renovate/**

jobs:
  init:
    name: "Init"
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.extract_branch.outputs.branch }}
    steps:
      - name: "setup java"
        uses: actions/setup-java@v4.2.1
        with:
          distribution: 'temurin'
          java-version: '21'

      - uses: actions/checkout@v4.1.3
        id: checkout

      - name: "Extract branch name"
        id: extract_branch
        run: echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT

      - name: "Gradle cache"
        id: gradle-cache
        uses: actions/cache@v4.0.2
        with:
          path: |
            ~/.gradle/wrapper/dists/**
          key: ${{ runner.os }}-gradle-${{ secrets.GRADLE_CACHE_VERSION }}-${{ hashFiles('./*.gradle', './*.gradle.kts', './gradle.properties') }}
          restore-keys: ${{ runner.os }}-gradle-${{ secrets.GRADLE_CACHE_VERSION }}-

      - name: "Workspace cache"
        uses: actions/cache@v4.0.2
        with:
          path: ${{ github.workspace }}/**
          key: ${{ runner.os }}-sources-${{ github.run_id }}

      - name: "get fossa"
        run: |
          curl -H 'Cache-Control: no-cache' https://raw.githubusercontent.com/fossas/fossa-cli/master/install.sh > install.sh
          sudo bash install.sh -b .

      - name: "init gradle"
        if: steps.gradle-cache.outputs.cache-hit != 'true'
        run: ./gradlew --no-daemon

  staticDetektCheck:
    name: "Detekt - static check"
    runs-on: ubuntu-latest
    needs: init
    steps:
      - name: "setup java"
        uses: actions/setup-java@v4.2.1
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: "Load sources"
        uses: actions/cache@v4.0.2
        with:
          path: ${{ github.workspace }}/**
          key: ${{ runner.os }}-sources-${{ github.run_id }}

      - name: "Load gradle cache"
        uses: actions/cache@v4.0.2
        with:
          path: |
            ~/.gradle/wrapper/dists/**
          key: ${{ runner.os }}-gradle-${{ secrets.GRADLE_CACHE_VERSION }}-${{ hashFiles('./*.gradle', './*.gradle.kts', './gradle.properties') }}
          restore-keys: ${{ runner.os }}-gradle-${{ secrets.GRADLE_CACHE_VERSION }}-

      - name: "Detekt"
        run: ${{ github.workspace }}/gradlew detekt --no-daemon

  staticFossaCheck:
    name: "Fossa licence analyze - static check"
    runs-on: ubuntu-latest
    needs: init
    steps:
      - name: "setup java"
        uses: actions/setup-java@v4.2.1
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: "Load sources"
        uses: actions/cache@v4.0.2
        with:
          path: ${{ github.workspace }}/**
          key: ${{ runner.os }}-sources-${{ github.run_id }}

      - name: "Fossa analyze"
        env:
          FOSSA_API_KEY: ${{ secrets.FOSSA_API_KEY }}
        run: ${{ github.workspace }}/fossa analyze --branch ${{ needs.init.outputs.branch }}

  compile:
    runs-on: ubuntu-latest
    needs: init
    steps:
      - name: "setup java"
        uses: actions/setup-java@v4.2.1
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: "Load sources"
        uses: actions/cache@v4.0.2
        with:
          path: ${{ github.workspace }}/**
          key: ${{ runner.os }}-sources-${{ github.run_id }}

      - name: "Load gradle cache"
        uses: actions/cache@v4.0.2
        with:
          path: |
            ~/.gradle/wrapper/dists/**
          key: ${{ runner.os }}-gradle-${{ secrets.GRADLE_CACHE_VERSION }}-${{ hashFiles('./*.gradle', './*.gradle.kts', './gradle.properties') }}
          restore-keys: ${{ runner.os }}-gradle-${{ secrets.GRADLE_CACHE_VERSION }}-

      - uses: actions/cache@v4.0.2
        with:
          path: ${{ github.workspace }}/**
          key: ${{ runner.os }}-compile-${{ github.run_id }}

      - name: "Compile"
        run: ${{ github.workspace }}/gradlew classes --no-daemon

  test:
    runs-on: ubuntu-latest
    needs: compile
    steps:
      - name: "setup java"
        uses: actions/setup-java@v4.2.1
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: "Load compile cache"
        uses: actions/cache@v4.0.2
        with:
          path: ${{ github.workspace }}/**
          key: ${{ runner.os }}-compile-${{ github.run_id }}

      - name: "Load gradle cache"
        uses: actions/cache@v4.0.2
        with:
          path: |
            ~/.gradle/wrapper/dists/**
          key: ${{ runner.os }}-gradle-${{ secrets.GRADLE_CACHE_VERSION }}-${{ hashFiles('./*.gradle', './*.gradle.kts', './gradle.properties') }}
          restore-keys: ${{ runner.os }}-gradle-${{ secrets.GRADLE_CACHE_VERSION }}-

      - name: "Unit test cache"
        uses: actions/cache@v4.0.2
        with:
          path: ${{ github.workspace }}/**
          key: ${{ runner.os }}-test-${{ github.run_id }}

      - name: "Unit test"
        run: ${{ github.workspace }}/gradlew test --no-daemon

  licenceCheck:
    runs-on: ubuntu-latest
    needs:
      - compile
      - staticFossaCheck
    steps:
      - name: "Load sources"
        uses: actions/cache@v4.0.2
        with:
          path: ${{ github.workspace }}/**
          key: ${{ runner.os }}-sources-${{ github.run_id }}

      - name: "Fossa check license"
        env:
          FOSSA_API_KEY: ${{ secrets.FOSSA_API_KEY }}
        run: ${{ github.workspace }}/fossa test

  report:
    runs-on: ubuntu-latest
    needs:
      - test
    if: ${{ !cancelled() }}
    steps:
      - name: "Load test cache"
        uses: actions/cache@v4.0.2
        with:
          path: ${{ github.workspace }}/**
          key: ${{ runner.os }}-test-${{ github.run_id }}

      - name: "Publish Report"
        run: bash <(curl -s https://codecov.io/bash) -B ${{ needs.init.outputs.branch }}

  publishSnapshot:
    runs-on: ubuntu-latest
    needs:
      - report
      - licenceCheck
    if: (needs.init.outputs.branch == 'develop') && success()
    steps:
      - name: "setup java"
        uses: actions/setup-java@v4.2.1
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: "Load compile cache"
        uses: actions/cache@v4.0.2
        with:
          path: ${{ github.workspace }}/**
          key: ${{ runner.os }}-compile-${{ github.run_id }}

      - name: "Load gradle cache"
        uses: actions/cache@v4.0.2
        with:
          path: |
            ~/.gradle/wrapper/dists/**
          key: ${{ runner.os }}-gradle-${{ secrets.GRADLE_CACHE_VERSION }}-${{ hashFiles('./*.gradle', './*.gradle.kts', './gradle.properties') }}
          restore-keys: ${{ runner.os }}-gradle-${{ secrets.GRADLE_CACHE_VERSION }}-

      - name: "Publish"
        env:
          # for github registry
          ORG_GRADLE_PROJECT_ghToken: ${{ secrets.GITHUB_TOKEN }}
          ORG_GRADLE_PROJECT_ghUsrnm: ${{ github.actor }}
          # for sonartype OSSRH
          ORG_GRADLE_PROJECT_mvnCntrlUsr: ${{ secrets.MVN_CNTRL_USR }}
          ORG_GRADLE_PROJECT_mvnCntrlPswd: ${{ secrets.MVN_CNTRL_PSWD }}
          # for signing
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.MVN_CNTRL_SECRET_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.MVN_CNTRL_SECRET_KEY_PASS }}
        run: ${{ github.workspace }}/gradlew publish --no-daemon
